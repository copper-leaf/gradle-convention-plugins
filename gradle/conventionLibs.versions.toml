# The libraries in this file are used as the primary version catalog for the libraries using the convention plguins,
# to keep all Copper Leaf libraries using the same transitive dependency versions.
#
# The libraries defined here may also be used directly within the convention plugins themselves for setting up common
# dependencies like test libraries.

[versions]
coroutines = "1.10.1"
serialization = "1.8.0"
datetime = "0.5.0"
ktor = "2.3.11"

androidxLifecycle = "2.7.0"

multiplatformSettings = "1.1.1"
slf4j = "1.7.36"
sqldelight = "2.0.2"
ballast = "4.2.2"
koin = "3.5.3"
wasmBrowser = "0.3"

[libraries]
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
kotlinx-wasm-browser = { module = "org.jetbrains.kotlinx:kotlinx-browser", version.ref = "wasmBrowser" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-serialization = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

ktor-http-utils = { module = "io.ktor:ktor-http", version.ref = "ktor" }

androidx-lifecycle-common = { module = "androidx.lifecycle:lifecycle-common", version.ref = "androidxLifecycle" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
androidx-core = { module = "androidx.core:core-ktx", version = "1.15.0" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version = "1.7.0" }
androidx-fragment = { module = "androidx.fragment:fragment-ktx", version = "1.8.5" }
androidx-material = { module = "com.google.android.material:material", version = "1.11.0" }
androidx-activityCompose = { module = "androidx.activity:activity-compose", version = "1.10.0" }

firebase-bom = { module = "com.google.firebase:firebase-bom", version = "32.7.0" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }

multiplatformSettings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatformSettings" }
multiplatformSettings-noArg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettings" }

slf4j-nop = { module = "org.slf4j:slf4j-nop", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }

sqldelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-driver-jvm = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

ballast-api                  = { module = "io.github.copper-leaf:ballast-api", version.ref = "ballast" }
ballast-viewmodel            = { module = "io.github.copper-leaf:ballast-viewmodel", version.ref = "ballast" }
ballast-logging              = { module = "io.github.copper-leaf:ballast-logging", version.ref = "ballast" }
ballast-utils                = { module = "io.github.copper-leaf:ballast-utils", version.ref = "ballast" }
ballast-core                 = { module = "io.github.copper-leaf:ballast-core", version.ref = "ballast" }
ballast-repository           = { module = "io.github.copper-leaf:ballast-repository", version.ref = "ballast" }
ballast-savedState           = { module = "io.github.copper-leaf:ballast-saved-state", version.ref = "ballast" }
ballast-debugger             = { module = "io.github.copper-leaf:ballast-debugger", version.ref = "ballast" }
ballast-sync                 = { module = "io.github.copper-leaf:ballast-sync", version.ref = "ballast" }
ballast-undo                 = { module = "io.github.copper-leaf:ballast-undo", version.ref = "ballast" }
ballast-navigation           = { module = "io.github.copper-leaf:ballast-navigation", version.ref = "ballast" }
ballast-crashReporting       = { module = "io.github.copper-leaf:ballast-crash-reporting", version.ref = "ballast" }
ballast-firebaseCrashlytics  = { module = "io.github.copper-leaf:ballast-firebase-crashlytics", version.ref = "ballast" }
ballast-analytics            = { module = "io.github.copper-leaf:ballast-analytics", version.ref = "ballast" }
ballast-firebaseAnalytics    = { module = "io.github.copper-leaf:ballast-firebase-analytics", version.ref = "ballast" }
ballast-test                 = { module = "io.github.copper-leaf:ballast-test", version.ref = "ballast" }
ballast-schedules            = { module = "io.github.copper-leaf:ballast-schedules", version.ref = "ballast" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-coroutines = { module = "io.insert-koin:koin-core-coroutines", version.ref = "koin" }

benasher44-uuid = { module = "com.benasher44:uuid", version = "0.8.4" }
kudzu-core = { module = "io.github.copper-leaf:kudzu-core", version = "6.0.0" }
coil = { module = "io.coil-kt:coil", version = "2.5.0" }
composeImageLoader = { module = "io.github.qdsfdhvh:image-loader", version = "1.7.3" }
kermit = { module = "co.touchlab:kermit", version = "2.0.2" }
uri = { module = "com.eygraber:uri-kmp", version = "0.0.19" }

[bundles]

ktorClient = [
    "ktor-client-core",
    "ktor-client-logging",
    "ktor-client-websockets",
    "ktor-client-serialization",
    "ktor-client-serialization-json",
]

ktorEmbeddedServer = [
    "ktor-server-core",
    "ktor-server-cio",
    "ktor-server-logging",
    "ktor-server-cors",
    "ktor-server-websockets",
    "ktor-server-serialization",
    "ktor-server-serialization-json",
    "slf4j-simple"
]
